// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum {number}
 */
export namespace msg{
export enum Color{
  Red= 0,
  Green= 1,
  Blue= 2,
  Yellow= 3,
  Pink= 4,
  Gray= 5,
  Orange= 6
}};

/**
 * @enum {number}
 */
export namespace msg{
export enum MessageType{
  login= 0,
  logout= 1,
  sync= 2
}};

/**
 * @constructor
 */
export namespace msg{
export class Vec2 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec2
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec2 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static create(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace msg{
export class Vec3 {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vec3
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vec3 {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @returns number
 */
z():number {
  return this.bb!.readFloat32(this.bb_pos + 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @param number z
 * @returns flatbuffers.Offset
 */
static create(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {
  builder.prep(4, 12);
  builder.writeFloat32(z);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace msg{
export class Player {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Player
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Player {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Player= obj
 * @returns Player
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:Player):Player {
  return (obj || new Player()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Player= obj
 * @returns Player
 */
static getSizePrefixedRoot(bb:flatbuffers.ByteBuffer, obj?:Player):Player {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Player()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param msg.Vec2= obj
 * @returns msg.Vec2|null
 */
pos(obj?:msg.Vec2):msg.Vec2|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new msg.Vec2()).__init(this.bb_pos + offset, this.bb!) : null;
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
uuid():string|null
uuid(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
uuid(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns msg.Color
 */
col():msg.Color {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : msg.Color.Red;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset posOffset
 */
static addPos(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, posOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset uuidOffset
 */
static addUuid(builder:flatbuffers.Builder, uuidOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, uuidOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param msg.Color col
 */
static addCol(builder:flatbuffers.Builder, col:msg.Color) {
  builder.addFieldInt8(2, col, msg.Color.Red);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static create(builder:flatbuffers.Builder, posOffset:flatbuffers.Offset, uuidOffset:flatbuffers.Offset, col:msg.Color):flatbuffers.Offset {
  Player.start(builder);
  Player.addPos(builder, posOffset);
  Player.addUuid(builder, uuidOffset);
  Player.addCol(builder, col);
  return Player.end(builder);
}
}
}
/**
 * @constructor
 */
export namespace msg{
export class Message {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Message
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Message {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Message= obj
 * @returns Message
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:Message):Message {
  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Message= obj
 * @returns Message
 */
static getSizePrefixedRoot(bb:flatbuffers.ByteBuffer, obj?:Message):Message {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Message()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns msg.MessageType
 */
type():msg.MessageType {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : msg.MessageType.login;
};

/**
 * @param msg.Player= obj
 * @returns msg.Player|null
 */
player(obj?:msg.Player):msg.Player|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new msg.Player()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param msg.MessageType type
 */
static addType(builder:flatbuffers.Builder, type:msg.MessageType) {
  builder.addFieldInt8(0, type, msg.MessageType.login);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset playerOffset
 */
static addPlayer(builder:flatbuffers.Builder, playerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, playerOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishSizePrefixedBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
};

static create(builder:flatbuffers.Builder, type:msg.MessageType, playerOffset:flatbuffers.Offset):flatbuffers.Offset {
  Message.start(builder);
  Message.addType(builder, type);
  Message.addPlayer(builder, playerOffset);
  return Message.end(builder);
}
}
}
